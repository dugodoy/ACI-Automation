---
- name: Configure MSO Policies
  hosts: mso
  gather_facts: false

  tasks:
  - name: Loading "NDO Tenant Objects" Information from CSV File
    read_csv:
      path: ../aci_config/mso_tn_objects.csv
    register: mso_tn_objects
    delegate_to: localhost
    tags:
      - bd
      - anp
      - epg

  - name: Configure Application Network Profile
    cisco.mso.mso_schema_template_anp:
      hostname: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false
      schema: "{{ item.schema_name }}"
      template: "{{ item.template_name }}"
      anp: "{{ item.anp_name }}"
      state: present
    loop: "{{ mso_tn_objects.list | json_query('[].{schema_name: schema_name, template_name: template_name, anp_name: anp_name}') | unique }}"
    loop_control:
      label: "Configuring ANP Name \"{{ item.anp_name }}\" on Schema \"{{ item.schema_name }}\" and Template \"{{ item.template_name }}\""
    tags:
     - anp

  - name: Configure Bridge Domain Without Subnet
    cisco.mso.mso_schema_template_bd:
      hostname: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false
      schema: "{{ item.schema_name }}"
      template: "{{ item.template_name }}"
      bd: "{{ item.bridge_domain }}"
      layer2_stretch: false
      unicast_routing: false
      layer2_unknown_unicast: flood
      layer3_multicast: false
      unknown_multicast_flooding: flood
      multi_destination_flooding: drop
      ipv6_unknown_multicast_flooding: flood
      arp_flooding: false
      vrf:
        name: "{{ item.vrf_name }}"
        schema: "{{ item.vrf_schema }}"
        template: "{{ item.vrf_template }}"
      state: present
    loop: "{{ mso_tn_objects.list | json_query('[?subnet==`no`].{schema_name: schema_name, template_name: template_name, bridge_domain: bridge_domain, vrf_schema: vrf_schema, vrf_name: vrf_name, vrf_template: vrf_template}') }}"
    loop_control:
      label: "Configuring BD Name \"{{ item.bridge_domain }}\" on Template \"{{ item.template_name }}\" and VRF \"{{ item.vrf_name }}\""
    tags:
      - bd

  - name: Configure Bridge Domain With 1 Subnet Configured
    cisco.mso.mso_schema_template_bd:
      hostname: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false
      schema: "{{ item.schema_name }}"
      template: "{{ item.template_name }}"
      bd: "{{ item.bridge_domain }}"
      layer2_stretch: true
      intersite_bum_traffic: true
      optimize_wan_bandwidth: true
      unicast_routing: true
      layer2_unknown_unicast: proxy
      layer3_multicast: false
      unknown_multicast_flooding: flood
      multi_destination_flooding: drop
      ipv6_unknown_multicast_flooding: flood
      arp_flooding: true
      subnets:
        - subnet: "{{ item.gateway }}"
          scope: "{{ item.scope }}"
      vrf:
        name: "{{ item.vrf_name }}"
        schema: "{{ item.vrf_schema }}"
        template: "{{ item.vrf_template }}"
      state: present
    loop: "{{ mso_tn_objects.list | json_query('[?sec_subnet==`no`].{schema_name: schema_name, template_name: template_name, bridge_domain: bridge_domain, vrf_schema: vrf_schema, vrf_name: vrf_name, vrf_template: vrf_template, gateway: gateway, scope: scope}') }}"
    loop_control:
      label: "Configuring BD Name \"{{ item.bridge_domain }}\" on Template \"{{ item.template_name }}\" and VRF \"{{ item.vrf_name }}\""
    tags:
      - bd

  - name: Configure Bridge Domain With 2 Subnet Configured
    cisco.mso.mso_schema_template_bd:
      hostname: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false
      schema: "{{ item.schema_name }}"
      template: "{{ item.template_name }}"
      bd: "{{ item.bridge_domain }}"
      layer2_stretch: true
      intersite_bum_traffic: true
      optimize_wan_bandwidth: true
      unicast_routing: true
      layer2_unknown_unicast: proxy
      layer3_multicast: false
      unknown_multicast_flooding: flood
      multi_destination_flooding: drop
      ipv6_unknown_multicast_flooding: flood
      arp_flooding: true
      subnets:
        - subnet: "{{ item.gateway }}"
          scope: "{{ item.scope }}"
          primary: true
        - subnet: "{{ item.gw_sec }}"
          scope: "{{ item.scope }}"
      vrf:
        name: "{{ item.vrf_name }}"
        schema: "{{ item.vrf_schema }}"
        template: "{{ item.vrf_template }}"
      state: present
    loop: "{{ mso_tn_objects.list | json_query('[?sec_subnet==`yes`].{schema_name: schema_name, template_name: template_name, bridge_domain: bridge_domain, vrf_schema: vrf_schema, vrf_name: vrf_name, vrf_template: vrf_template, gateway: gateway, gw_sec: gw_sec, scope: scope}') }}"
    loop_control:
      label: "Configuring BD Name \"{{ item.bridge_domain }}\" on Template \"{{ item.template_name }}\" and VRF \"{{ item.vrf_name }}\""
    tags:
      - bd

  - name: Configure Endpoint Group
    cisco.mso.mso_schema_template_anp_epg:
      hostname: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false
      schema: "{{ item.schema_name }}"
      template: "{{ item.template_name }}"
      anp: "{{ item.anp_name }}"
      epg: "{{ item.epg_name }}"
      bd:
        name: "{{ item.bridge_domain }}"
        schema: "{{ item.schema_name }}"
        template: "{{ item.template_name }}"
      vrf:
        name: "{{ item.vrf_name }}"
        schema: "{{ item.vrf_schema }}"
        template: "{{ item.vrf_template }}"
      state: present
    loop: "{{ mso_tn_objects.list }}"
    loop_control:
      label: "Configuring EPG \"{{ item.epg_name }}\" on ANP \"{{ item.anp_name }}\" Associated to BD \"{{ item.bridge_domain }}\""
    tags:
      - epg

  #- name: Configure Site Local Bridge Domain
  #  cisco.mso.mso_schema_site_bd:
  #    hostname: "{{ ansible_host }}"
  #    username: "{{ ansible_user }}"
  #    password: "{{ ansible_password }}"
  #    validate_certs: false
  #    schema: "{{ item.schema_name }}"
  #    template: "{{ item.template_name }}"
  #    site: "{{ item.site_name }}"
  #    bd: "{{ item.bridge_domain }}"
  #    state: present
  #  loop: "{{ mso_tn_objects.list | json_query('[?subnet==`yes`].{site_name: site_name, schema_name: schema_name, template_name: template_name, bridge_domain: bridge_domain}') }}"
  #  loop_control:
  #    label: "Configuring BD \"{{ item.bridge_domain }}\" on Site \"{{ item.site_name }}\""
  #  tags:
  #    - bd

  - name: Configure Host Route to Site BD
    cisco.mso.mso_schema_site_bd:
      hostname: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false
      output_level: debug
      schema: "{{ item.schema_name }}"
      site: "{{ item.site_name }}"
      template: "{{ item.template_name }}"
      bd: "{{ item.bridge_domain }}"
      host_route: true
      state: present
    loop: "{{ mso_tn_objects.list | json_query('[?host_route==`yes`].{site_name: site_name, schema_name: schema_name, template_name: template_name, bridge_domain: bridge_domain, host_route: host_route}') }}"
    loop_control:
      label: "Configuring  Host Route for BD \"{{ item.bridge_domain }}\" on Site \"{{ item.site_name }}\""
    tags:
      - bd


#  - name: Configure Site Local Bridge Domain Subnet
#    cisco.mso.mso_schema_site_bd_subnet:
#      hostname: "{{ ansible_host }}"
#      username: "{{ ansible_user }}"
#      password: "{{ ansible_password }}"
#      validate_certs: false
#      output_level: debug
#      schema: "{{ item.schema_name }}"
#      site: "{{ item.site_name }}"
#      template: "{{ item.template_name }}"
#      bd: "{{ item.bridge_domain }}"
#      subnet: "{{ item.gateway }}"
#      scope: "{{ item.scope }}"
#      querier: true
#      state: present
#    loop: "{{ mso_tn_objects.list | json_query('[?subnet==`yes`].{site_name: site_name, schema_name: schema_name, template_name: template_name, bridge_domain: bridge_domain, vrf_name: vrf_name, gateway: gateway, scope: scope}') }}"
#    loop_control:
#      label: "Configuring Gateway \"{{ item.gateway }}\" for BD \"{{ item.bridge_domain }}\" on VRF \"{{ item.vrf_name }}\""
#    tags:
#      - bd

  - name: Associate Domain to Endpoint Group
    cisco.mso.mso_schema_site_anp_epg_domain:
      hostname: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false
      schema: "{{ item.schema_name }}"
      site: "{{ item.site_name }}"
      template: "{{ item.template_name }}"
      anp: "{{ item.anp_name }}"
      epg: "{{ item.epg_name }}"
      domain_association_type: "{{ item.domain_type }}"
      domain_profile: "{{ item.domain_name }}"
      deployment_immediacy: immediate
      resolution_immediacy: pre-provision
      state: present
    loop: "{{ mso_tn_objects.list }}"
    loop_control:
      label: "Associating Domain Name \"{{ item.domain_name }}\" on EPG \"{{ item.epg_name }}\""
    tags:
      - epg

  - name: Deploy Configuration
    cisco.mso.ndo_schema_template_deploy:
      host: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false
      schema: "{{ item.schema_name }}"
      template: "{{ item.template_name }}"
      state: deploy
    loop: "{{ mso_tn_objects.list | json_query('[].{schema_name: schema_name, template_name: template_name}') | unique  }}"
    loop_control:
      label: "Deploying Configuration for Schema \"{{ item.schema_name }}\" and Template \"{{ item.template_name }}\""
    tags:
      - bd
      - anp
      - epg